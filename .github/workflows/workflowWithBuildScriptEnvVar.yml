on: [push]
env:
  dockerfilePaths: ''
  
jobs:
  build-and-deploy:
    env:
      REGISTRY_URL: jysintestregistry.azurecr.io
      NAMESPACE: jysintestnsnew3
      CR_USERNAME: ${{ secrets.AZURE_CLIENT_ID }}
      CR_PASSWORD: ${{ secrets.AZURE_CLIENT_SECRET }}
      DOCKERFILE_PATHS: |
        jysintestregistry.azurecr.io/k8sdemo:${{ github.sha }} ./Dockerfile

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    
    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: jysintestregistry.azurecr.io
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}
    
    - run: |
        docker build . -t jysintestregistry.azurecr.io/k8sdemo:${{ github.sha }}
        docker push jysintestregistry.azurecr.io/k8sdemo:${{ github.sha }}
   
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.AKS_JYSINAKS2_KUBECONFIG }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep $NAMESPACE | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace $NAMESPACE`
        fi
    
    - uses: Azure/k8s-create-secret@v1
      with:
        namespace: ${{ env.NAMESPACE  }}
        container-registry-url: jysintestregistry.azurecr.io
        container-registry-username: ${{ secrets.AZURE_CLIENT_ID }}
        container-registry-password: ${{ secrets.AZURE_CLIENT_SECRET }}
        secret-name: demo-k8s-secret
            
    - uses: Azure/k8s-deploy@releases/v1.2
      with:
        namespace: ${{ env.NAMESPACE  }}
        imagepullsecrets: demo-k8s-secret
        manifests: |
          .devcontainer/manifests/deployment.yml
          .devcontainer/manifests/service.yml
        images: |
          jysintestregistry.azurecr.io/jysintestimage@${{  github.sha }}
